# -*- coding: utf-8 -*-
"""RSA-PSS .ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1lbiTSMQktOHLlC1E6t1oRQRx0_e0G4xH
"""

!pip install pycryptodome
!pip install rsa

from Crypto.Signature import pss
from Crypto.Hash import SHA256
from Crypto.PublicKey import RSA
from Crypto import Random
import rsa

#Creacion de llaves en archivos pem
public_key, private_key = rsa.newkeys(1024)

with open("public.pem", "wb") as f:
  f.write(public_key.save_pkcs1("PEM"))
with open("private.pem", "wb") as f:
  f.write(private_key.save_pkcs1("PEM"))


message = b'To be signed'
key = RSA.import_key(open('private.pem').read())
h = SHA256.new(message)
signature = pss.new(key).sign(h)

key = RSA.import_key(open('public.pem').read())
h = SHA256.new(message)
verifier = pss.new(key)
try:
    verifier.verify(h, signature)
    print ("The signature is authentic.")
except (ValueError, TypeError):
    print ("The signature is not authentic.")